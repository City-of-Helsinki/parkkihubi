swagger: '2.0'
info:
  title: Parkkihubi
  description: |
                 Parkkihubi REST API Documentation (Operator)

                 Authentication: Every request must have header `Authorization: ApiKey <your api key>`

  version: "1.1.0"
host: api.parkkiopas.fi
schemes:
  - https
basePath: /operator/v1
consumes:
  - application/json
produces:
  - application/json
paths:
  /parking/:
    post:
      tags:
        - parking
      summary: Create a new parking
      operationId: createParking
      parameters:
        - name: parking
          in: body
          required: true
          description: Parking to add to the system
          schema:
            type: object
            example:
              location:
                type: Point
                coordinates: [24.938466, 60.170014]
              registration_number: LOL-007
              time_start: "2016-12-24T21:00:00Z"
              time_end: "2016-12-24T22:00:00Z"
              zone: 2
            properties:
              location:
                $ref: '#/definitions/Location'
              registration_number:
                description: Registration number for the parking
                type: string
              time_start:
                description: Start time for the parking
                type: string
                format: dateTime
              time_end:
                description: End time for the parking
                type: string
                format: dateTime
              zone:
                description: Parking zone
                type: integer
                enum: [1, 2, 3]
            required:
              - registration_number
              - time_start
              - zone
      responses:
        201:
          description: The parking was created successfully
          schema:
            $ref: '#/definitions/Parking'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
  /parking/{parking_id}/:
    put:
      tags:
        - parking
      summary: Update a parking by its ID
      operationId: updateParkingById
      parameters:
        - name: parking_id
          in: path
          required: true
          description: ID of the parking to update
          type: string
          format: uuid
        - name: parking
          in: body
          required: true
          description: Parking to add to the system
          schema:
            type: object
            example:
              location:
                type: Point
                coordinates: [24.938466, 60.170014]
              registration_number: LOL-007
              time_start: "2016-12-24T21:00:00Z"
              time_end: "2016-12-24T22:00:00Z"
              zone: 2
            properties:
              location:
                $ref: '#/definitions/Location'
              registration_number:
                description: Registration number for the parking
                type: string
              time_start:
                description: Start time for the parking
                type: string
                format: dateTime
              time_end:
                description: End time for the parking
                type: string
                format: dateTime
              zone:
                description: Parking zone
                type: integer
                enum: [1, 2, 3]
            required:
              - registration_number
              - time_start
              - zone
      responses:
        200:
          description: The parking was updated successfully
          schema:
            $ref: '#/definitions/Parking'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/NotFound'
    patch:
      tags:
        - parking
      summary: Partial update a parking by its ID
      operationId: partialUpdateParkingById
      parameters:
        - name: parking_id
          in: path
          required: true
          description: ID of the parking to update
          type: string
          format: uuid
        - name: parking
          in: body
          required: true
          description: Parking to add to the system
          schema:
            type: object
            example:
              time_end: "2016-12-25T22:00:00Z"
            properties:
              location:
                $ref: '#/definitions/Location'
              registration_number:
                description: Registration number for the parking
                type: string
              time_start:
                description: Start time for the parking
                type: string
                format: dateTime
              time_end:
                description: End time for the parking
                type: string
                format: dateTime
              zone:
                description: Parking zone
                type: integer
                enum: [1, 2, 3]
      responses:
        200:
          description: The parking was updated successfully
          schema:
            $ref: '#/definitions/Parking'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/NotFound'
    delete:
      tags:
        - parking
      summary: Delete a parking by its ID
      operationId: deleteParkingById
      parameters:
        - name: parking_id
          in: path
          required: true
          description: ID of the parking to delete
          type: string
          format: uuid
      responses:
        204:
          description: The parking was deleted successfully
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/NotFound'
definitions:
  Parking:
    type: object
    example:
      id: 70fb01a8-a17f-4b14-9b99-0060c748411c
      status: valid
      created_at: "2016-12-10T20:34:38Z"
      modified_at: "2016-12-11T21:34:22Z"
      location:
        type: Point
        coordinates: [24.938466, 60.170014]
      registration_number: LOL-007
      time_start: "2016-12-24T21:00:00Z"
      time_end: "2016-12-24T22:00:00Z"
      zone: 2
    properties:
      id:
        description: Unique identifier for the parking
        type: string
        format: uuid
        readOnly: true
      status:
        description: Status of the parking
        type: string
        enum: [valid, not_valid]
        readOnly: true
      created_at:
        description: Creation time for the parking
        type: string
        format: dateTime
        readOnly: true
      modified_at:
        description: Modification time for the parking
        type: string
        format: dateTime
        readOnly: true
      location:
        $ref: '#/definitions/Location'
      registration_number:
        description: Registration number for the parking
        type: string
      time_start:
        description: Start time for the parking
        type: string
        format: dateTime
      time_end:
        description: End time for the parking
        type: string
        format: dateTime
      zone:
        description: Parking zone
        type: integer
        enum: [1, 2, 3]
    required:
      - registration_number
      - time_start
      - zone
  Location:
    description: Point location in geoJSON format
    type: object
    example:
      type: Point
      coordinates: [24.938466, 60.170014]
    properties:
      type:
        description: Location geometry type.
        type: string
      coordinates:
        description: An array of coordinates describing the location geometry (longitude, latitude)
        type: array
        items:
          type: number
          format: float
responses:
  BadRequest:
    description: Bad request, details in request body
    schema:
      example:
        registration_number: [Enter a valid value.]
  Unauthorized:
    description: Unauthorized access
  Forbidden:
    description: Forbidden request
    schema:
      type: object
      properties:
        code:
          type: string
          enum: [unknown_error, permission_denied, grace_period_over]
        detail:
          type: string
      example:
        code: grace_period_over
        detail: Grace period has passed. Only "time_end" can be updated via PATCH.
  NotFound:
    description: Parking not found
